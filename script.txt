-- MySQL Script generated by MySQL Workbench
-- Tue Apr  4 07:28:17 2023
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema coar
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `coar` ;

-- -----------------------------------------------------
-- Schema coar
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `coar` DEFAULT CHARACTER SET utf8 ;
USE `coar` ;

-- -----------------------------------------------------
-- Table `coar`.`docente`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `coar`.`docente` ;

CREATE TABLE IF NOT EXISTS `coar`.`docente` (
  `docente_id` INT NOT NULL AUTO_INCREMENT,
  `dni` CHAR(8) NOT NULL,
  `nombre` VARCHAR(40) NOT NULL,
  `apellido` VARCHAR(45) NOT NULL,
  `edad` TINYINT NOT NULL,
  `genero` VARCHAR(6) NOT NULL,
  `num_telefonico` CHAR(9) NOT NULL,
  `especialidad` VARCHAR(30) NOT NULL,
  PRIMARY KEY (`docente_id`),
  UNIQUE INDEX `docente_dni_idx` (`dni`) ,
  UNIQUE INDEX `docente_num_telefonico_idx` (`num_telefonico`) )
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `coar`.`estudiante`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `coar`.`estudiante` ;

CREATE TABLE IF NOT EXISTS `coar`.`estudiante` (
  `estudiante_id` INT NOT NULL AUTO_INCREMENT,
  `dni` CHAR(8) NOT NULL,
  `nombre` VARCHAR(40) NOT NULL,
  `apellido` VARCHAR(45) NOT NULL,
  `edad` TINYINT NOT NULL,
  `genero` VARCHAR(6) NOT NULL,
  `num_telefonico` CHAR(9) NOT NULL,
  PRIMARY KEY (`estudiante_id`),
  UNIQUE INDEX `estudiante_dni_idx` (`dni`) ,
  UNIQUE INDEX `estudiante_num_telefonico_idx` (`num_telefonico`) )
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `coar`.`secretario`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `coar`.`secretario` ;

CREATE TABLE IF NOT EXISTS `coar`.`secretario` (
  `secretario_id` INT NOT NULL AUTO_INCREMENT,
  `dni` CHAR(8) NOT NULL,
  `nombre` VARCHAR(40) NOT NULL,
  `apellido` VARCHAR(45) NOT NULL,
  `edad` TINYINT NOT NULL,
  `genero` VARCHAR(6) NOT NULL,
  `num_telefonico` CHAR(9) NOT NULL,
  `anios_labor` TINYINT NOT NULL,
  PRIMARY KEY (`secretario_id`),
  UNIQUE INDEX `secretario_dni_idx` (`dni`) ,
  UNIQUE INDEX `secretario_num_telefonico_idx` (`num_telefonico`) )
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `coar`.`usuario`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `coar`.`usuario` ;

CREATE TABLE IF NOT EXISTS `coar`.`usuario` (
  `usuario_id` INT NOT NULL AUTO_INCREMENT,
  `dni` CHAR(8) NOT NULL,
  `correo_electronico` VARCHAR(50) NOT NULL,
  `contrasenia` VARCHAR(100) NOT NULL,
  `rol` TINYINT NOT NULL,
  PRIMARY KEY (`usuario_id`),
  UNIQUE INDEX `usuario_dni_idx` (`dni`) ,
  UNIQUE INDEX `usuario_correo_electronico_idx` (`correo_electronico`) )
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `coar`.`curso`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `coar`.`curso` ;

CREATE TABLE IF NOT EXISTS `coar`.`curso` (
  `curso_id` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(40) NOT NULL,
  `num_horas` TINYINT NOT NULL,
  `enfoque` VARCHAR(50) NOT NULL,
  PRIMARY KEY (`curso_id`),
  UNIQUE INDEX `curso_nombre_idx` (`nombre`) )
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `coar`.`grado_seccion`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `coar`.`grado_seccion` ;

CREATE TABLE IF NOT EXISTS `coar`.`grado_seccion` (
  `grado_seccion_id` INT NOT NULL AUTO_INCREMENT,
  `grado` TINYINT NOT NULL,
  `seccion` CHAR(1) NOT NULL,
  PRIMARY KEY (`grado_seccion_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `coar`.`docente_curso`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `coar`.`docente_curso` ;

CREATE TABLE IF NOT EXISTS `coar`.`docente_curso` (
  `docente_curso_id` INT NOT NULL AUTO_INCREMENT,
  `docente_id` INT NOT NULL,
  `curso_id` INT NOT NULL,
  PRIMARY KEY (`docente_curso_id`),
  INDEX `fk_docente_curso_docente_id` (`docente_id`) ,
  INDEX `fk_docente_curso_curso_id` (`curso_id`) ,
  CONSTRAINT `fk_docente_curso_docente_id`
    FOREIGN KEY (`docente_id`)
    REFERENCES `coar`.`docente` (`docente_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_docente_curso_curso_id`
    FOREIGN KEY (`curso_id`)
    REFERENCES `coar`.`curso` (`curso_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `coar`.`registro_calificacion`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `coar`.`registro_calificacion` ;

CREATE TABLE IF NOT EXISTS `coar`.`registro_calificacion` (
  `registro_calificacion_id` INT PRIMARY KEY NOT NULL AUTO_INCREMENT,
  `estudiante_id` INT NOT NULL,
  `docente_curso_id` INT NOT NULL,
  `calificacion1` TINYINT NOT NULL,
  `calificacion2` TINYINT NOT NULL,
  `calificacion3` TINYINT NOT NULL,
  `calificacion4` TINYINT NOT NULL,
  `bimestre` TINYINT NOT NULL,
  INDEX `fk_registro_calificacion_estudiante_id` (`estudiante_id`) ,
  INDEX `fk_registro_calificacion_docente_curso_id` (`docente_curso_id`) ,
  CONSTRAINT `fk_registro_calificacion_estudiante_id`
    FOREIGN KEY (`estudiante_id`)
    REFERENCES `coar`.`estudiante` (`estudiante_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_registro_calificacion_docente_curso_id`
    FOREIGN KEY (`docente_curso_id`)
    REFERENCES `coar`.`docente_curso` (`docente_curso_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `coar`.`registro_matricula`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `coar`.`registro_matricula` ;

CREATE TABLE IF NOT EXISTS `coar`.`registro_matricula` (
  `registro_matricula_id` INT PRIMARY KEY NOT NULL AUTO_INCREMENT,
  `estudiante_id` INT NOT NULL,
  `grado_seccion_id` INT NOT NULL,
  `nombre_paquete_curso` VARCHAR(40) NOT NULL,
  INDEX `fk_registro_matricula_estudiante_id` (`estudiante_id`) ,
  INDEX `fk_registro_matricula_grado_seccion_id` (`grado_seccion_id`) ,
  CONSTRAINT `fk_registro_matricula_estudiante_id`
    FOREIGN KEY (`estudiante_id`)
    REFERENCES `coar`.`estudiante` (`estudiante_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_registro_matricula_grado_seccion_id`
    FOREIGN KEY (`grado_seccion_id`)
    REFERENCES `coar`.`grado_seccion` (`grado_seccion_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
